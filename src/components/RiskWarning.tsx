import React, { useState, useEffect } from 'react';
import { Profile } from '../types/database';

interface RiskScore {
  actor: string;
  score: number;
  events: number;
  latest_event: string;
  risk_types: string[];
}

interface RiskWarningProps {
  user: Profile;
}

export function RiskWarning({ user }: RiskWarningProps) {
  const [riskScore, setRiskScore] = useState<RiskScore | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadRiskScore();
  }, [user.id]);

  const loadRiskScore = async () => {
    setLoading(true);
    try {
      // Mock risk score data
      const mockRiskScore: RiskScore = {
        actor: user.id,
        score: 3,
        events: 2,
        latest_event: '2025-01-15T10:00:00Z',
        risk_types: ['offplatform_hint']
      };

      setRiskScore(mockRiskScore);
    } catch (error) {
      console.error('Error loading risk score:', error);
    } finally {
      setLoading(false);
    }
  };

  if (loading || !riskScore || riskScore.score < 5) {
    return null;
  }

  const getRiskLevel = (score: number) => {
    if (score >= 10) return { level: 'high', color: 'red', text: '–í—ã—Å–æ–∫–∏–π' };
    if (score >= 5) return { level: 'medium', color: 'yellow', text: '–°—Ä–µ–¥–Ω–∏–π' };
    return { level: 'low', color: 'green', text: '–ù–∏–∑–∫–∏–π' };
  };

  const risk = getRiskLevel(riskScore.score);

  const getRiskTypeText = (type: string) => {
    const types = {
      offplatform_hint: '–ü–æ–ø—ã—Ç–∫–∏ –æ–±–º–µ–Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏',
      repeat_pair: '–ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è',
      bid_anomaly: '–ê–Ω–æ–º–∞–ª—å–Ω—ã–µ —Å—Ç–∞–≤–∫–∏',
      ip_device_match: '–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
      suspicious_behavior: '–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ'
    };
    return types[type as keyof typeof types] || type;
  };

  return (
    <div className={`mb-6 p-4 border rounded-lg ${
      risk.color === 'red' ? 'bg-red-50 border-red-200' :
      risk.color === 'yellow' ? 'bg-yellow-50 border-yellow-200' :
      'bg-green-50 border-green-200'
    }`}>
      <div className="flex items-start space-x-3">
        <div className={`flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center ${
          risk.color === 'red' ? 'bg-red-100' :
          risk.color === 'yellow' ? 'bg-yellow-100' :
          'bg-green-100'
        }`}>
          {risk.color === 'red' ? '‚ö†Ô∏è' : risk.color === 'yellow' ? '‚ö°' : '‚úÖ'}
        </div>
        
        <div className="flex-1">
          <div className="flex items-center justify-between">
            <h4 className={`font-medium ${
              risk.color === 'red' ? 'text-red-900' :
              risk.color === 'yellow' ? 'text-yellow-900' :
              'text-green-900'
            }`}>
              –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: {risk.text}
            </h4>
            <span className={`text-sm font-bold ${
              risk.color === 'red' ? 'text-red-700' :
              risk.color === 'yellow' ? 'text-yellow-700' :
              'text-green-700'
            }`}>
              {riskScore.score} –±–∞–ª–ª–æ–≤
            </span>
          </div>
          
          <div className={`text-sm mt-1 ${
            risk.color === 'red' ? 'text-red-800' :
            risk.color === 'yellow' ? 'text-yellow-800' :
            'text-green-800'
          }`}>
            <p>–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–æ–±—ã—Ç–∏–π: {riskScore.events}</p>
            <p>–¢–∏–ø—ã –Ω–∞—Ä—É—à–µ–Ω–∏–π: {riskScore.risk_types.map(getRiskTypeText).join(', ')}</p>
          </div>

          {risk.level === 'high' && (
            <div className="mt-3 p-3 bg-red-100 border border-red-200 rounded-lg">
              <p className="text-sm text-red-800 font-medium">
                üö® –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ü–∏—è
              </p>
              <p className="text-xs text-red-700 mt-1">
                –ò–∑-–∑–∞ –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è —Ä–∏—Å–∫–∞ –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Ç—Ä–µ–±—É—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏.
              </p>
            </div>
          )}

          {risk.level === 'medium' && (
            <div className="mt-3 p-3 bg-yellow-100 border border-yellow-200 rounded-lg">
              <p className="text-sm text-yellow-800 font-medium">
                ‚ö° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å
              </p>
              <p className="text-xs text-yellow-700 mt-1">
                –°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Ä–∏—Å–∫–∞.
              </p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}